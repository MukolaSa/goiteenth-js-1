/* this - зміна в яку записується контекст, в якому була викликана ця функція.
* немає хначення де так оли була створена фунція в файлі
* контекст оприділя.ться лише в момент виклику цієї функції
* якщо ми бачимо undefined або window це означає, що ф-я викликана без контектсу
*/

const user = {
    tag: 'Mango',
    showTag() {
        console.log('this:', this);
    },
};

console.log(user.showTag());
// посилання на тіло функції, бо щоб метод спрацював функцію потрібно викликати
// console.log(user.showTag);
// =================================================================================
// const fun = function() {
//     console.log('this', this);
// }
// fun()

// const use = {
//     tag: 'Mango',
// }
// use.showName = fun
// console.log(use);
// call, apply - методи які дозволяють прив'язати контекст
// ================================================================================================
const fn = function() {
    console.log(this);
    console.log('this', this);
}

const cars = {
    car: 'BMW',   
}

cars.name = fn
// console.log(cars);
cars.name()
// ============================
// bind - створює нову функцю (копію) з завжди прив'язаним контекстом
